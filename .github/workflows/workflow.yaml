name: workflow.yaml
on:
  push:
    tags:
      - 'v*.*.*'

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/imgc-rs

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract repository/service name
        id: extract-name
        run: echo "REPO_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Set Cargo.toml version
        shell: bash
        run: |
          sed -i "s/0\\.0\\.0-git/${DOCKER_METADATA_OUTPUT_VERSION#v}/" Cargo.toml
          head -n 5 Cargo.toml
          sed -i "s/0\\.0\\.0-git/${DOCKER_METADATA_OUTPUT_VERSION#v}/" Cargo.lock
          grep -i -C 5 "imgc" Cargo.lock

      - name: Install Linux and Windows Cross Compilers
        run: sudo apt-get install --yes --no-install-recommends musl-tools gcc-mingw-w64-x86-64-win32 nasm
        # nasm is needed for rav1e

      - name: Install rustup targets
        run: rustup target add x86_64-unknown-linux-musl x86_64-pc-windows-gnu

      - name: Build the executable
        run: cargo build --release --target x86_64-unknown-linux-musl --target x86_64-pc-windows-gnu

      - name: Tar x86_64 binary
        run: tar -czvf "imgc-rs-${DOCKER_METADATA_OUTPUT_VERSION#v}-gnu-linux-x86_64.tar.gz" -C target/x86_64-unknown-linux-musl/release imgc

      - name: Zip windows binary
        run: zip -j "imgc-rs-${DOCKER_METADATA_OUTPUT_VERSION#v}-windows.zip" target/x86_64-pc-windows-gnu/release/imgc.exe

      - name: Generate SHA256 checksums
        run: |
          shasum -a 256 "imgc-rs-${DOCKER_METADATA_OUTPUT_VERSION#v}-gnu-linux-x86_64.tar.gz" > "imgc-rs-${DOCKER_METADATA_OUTPUT_VERSION#v}-gnu-linux-x86_64.tar.gz.sha256"
          shasum -a 256 "imgc-rs-${DOCKER_METADATA_OUTPUT_VERSION#v}-windows.zip" > "imgc-rs-${DOCKER_METADATA_OUTPUT_VERSION#v}-windows.zip.sha256"

      - name: Upload binaries to release
        uses: alexellis/upload-assets@0.4.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["imgc-rs-*-gnu-linux-x86_64.tar.gz*", "imgc-rs-*-windows.zip*"]'

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          # https://github.com/docker/build-push-action#:~:text=any%20file%20mutation%20in%20the%20steps%20that%20precede%20the%20build%20step%20will%20be%20ignored
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}